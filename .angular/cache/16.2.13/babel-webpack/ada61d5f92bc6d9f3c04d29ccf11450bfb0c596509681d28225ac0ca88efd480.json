{"ast":null,"code":"import _asyncToGenerator from \"D:/Udemy/REDUX en Angular con NGRX Desde las bases hasta la pr\\xE1ctica/04-redux-ingreso-egreso/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { inject } from '@angular/core';\nimport { Auth, authState, createUserWithEmailAndPassword, signInWithEmailAndPassword } from '@angular/fire/auth';\nimport { map } from 'rxjs/operators';\nimport { Usuario } from '../models/usuario.models';\nimport { Firestore, collection, doc, setDoc } from '@angular/fire/firestore';\nimport { Store } from '@ngrx/store';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor() {\n      this.firestore = inject(Firestore);\n      this.auth = inject(Auth);\n      this.store = inject(Store);\n      this.authState$ = authState(this.auth);\n    }\n    initAuthListener() {\n      this.authState$.subscribe(fuser => {\n        if (fuser) {} else {}\n      });\n    }\n    crearUsuario(nombre, email, password) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        return createUserWithEmailAndPassword(_this.auth, email, password).then(({\n          user\n        }) => {\n          const newUser = new Usuario(user.uid, nombre, user.email);\n          const collectionRef = collection(_this.firestore, `${user.uid}`);\n          const documentRef = doc(collectionRef, 'user');\n          setDoc(documentRef, {\n            ...newUser\n          });\n        });\n      })();\n    }\n    loginUsuario(email, password) {\n      return signInWithEmailAndPassword(this.auth, email, password);\n    }\n    logout() {\n      return this.auth.signOut();\n    }\n    isAuth() {\n      return this.authState$.pipe(map(fbUser => fbUser != null));\n    }\n    static #_ = this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
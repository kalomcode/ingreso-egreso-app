{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Firestore, collection, doc, onSnapshot, setDoc } from '@angular/fire/firestore';\nimport { IngresoEgreso } from '../models/ingreso-egreso';\nimport { AuthService } from './auth.service';\nimport { Store } from '@ngrx/store';\nimport * as ieActions from '../ingreso-egreso/ingreso-egreso.actions';\nimport * as i0 from \"@angular/core\";\nexport let IngresoEgresoService = /*#__PURE__*/(() => {\n  class IngresoEgresoService {\n    constructor() {\n      this.firestore = inject(Firestore);\n      this.authSvc = inject(AuthService);\n      this.store = inject(Store);\n    }\n    initIngresoEgresoListener(uid) {\n      return onSnapshot(collection(this.firestore, uid, 'ingreso-egreso', 'items'), ingresosEgresosSnap => {\n        const ingresosEgresos = ingresosEgresosSnap.docs.map(ingresoEgresoSnap => {\n          const {\n            descripcion,\n            monto,\n            tipo\n          } = ingresoEgresoSnap.data();\n          return new IngresoEgreso(descripcion, monto, tipo, ingresoEgresoSnap.id);\n        });\n        console.log({\n          ingresosEgresos\n        });\n        this.store.dispatch(ieActions.setItems({\n          items: ingresosEgresos\n        }));\n      });\n    }\n    crearIngresoEgreso(ingresoEgreso) {\n      const uid = this.authSvc.user.uid;\n      delete ingresoEgreso.uid;\n      const collectionIngresoEgreso = collection(this.firestore, `${uid}/ingreso-egreso/items`);\n      return setDoc(doc(collectionIngresoEgreso), {\n        ...ingresoEgreso\n      });\n    }\n    static #_ = this.ɵfac = function IngresoEgresoService_Factory(t) {\n      return new (t || IngresoEgresoService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: IngresoEgresoService,\n      factory: IngresoEgresoService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return IngresoEgresoService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}